/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package almacenes.vistas;

import almacenes.Utiles;
import almacenes.conectorDB.DatabaseUtils;
import almacenes.model.Configuracion;
import dao.SistemaDAO;
import dao.SistemaDAOImpl;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author georgeguitar
 */
public class FormRestaurarDB extends javax.swing.JFrame {
    private static Connection connectionDB;
    /**
     * Creates new form OperacionesBackupDB
     */
    
   public FormRestaurarDB() {
        initComponents();
    }
   
    public FormRestaurarDB(Connection _connectionDB, String _idUsuario) {
        initComponents();
        this.connectionDB = _connectionDB;
        rotatingWheel.setVisible(false);
        rotatingWheel.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        archivoBackUP = new javax.swing.JTextField();
        botonRutaOrigen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        restaurarDB = new javax.swing.JButton();
        rotatingWheel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Ruta donde se encuentra  el backup de la base de datos:");

        botonRutaOrigen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Search-icon.png"))); // NOI18N
        botonRutaOrigen.setText("Buscar");
        botonRutaOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRutaOrigenActionPerformed(evt);
            }
        });

        jScrollPane1.setEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("¡No intente RESTAURAR el archivo de backup sin antes haber probado su\nfuncionamiento en otra computadora, la restauración destruirá toda la\ninformación de la base de datos actual y sera reemplazada con la información \ndel archivo de backup!\n\nSi ocurre algún error en el proceso restaure la base de datos manualmente\ndesde pgAdmin con la  cuenta del administrador de la base de datos.");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(archivoBackUP)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonRutaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(archivoBackUP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonRutaOrigen))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/close_window.png"))); // NOI18N
        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        restaurarDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/restore_db.png"))); // NOI18N
        restaurarDB.setText("Restaurar");
        restaurarDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restaurarDBActionPerformed(evt);
            }
        });

        rotatingWheel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/rotating_wheel1.gif"))); // NOI18N
        rotatingWheel.setText("!Espere a que termine el proceso!");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rotatingWheel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(restaurarDB, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(restaurarDB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(rotatingWheel))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private String validarCampos() {
        String errores = "";
        if (archivoBackUP.getText().isEmpty()) {
            errores = errores + "- ¡No se definió el destino de archivo de backup!.";
        }

        return errores;
    }

    private void salirCerrar() {
        DatabaseUtils databaseUtils = new DatabaseUtils();
        databaseUtils.close(connectionDB);
        System.exit(0);
    }
    
    private void restaurarDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restaurarDBActionPerformed
        String errores = validarCampos();
        rotatingWheel.setVisible(true);
        rotatingWheel.setEnabled(true);
        
        if (errores.isEmpty()) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (null, "¡Cierre todos los programas que estén conectados a la base de datos!"
                    + "\n !El archivo de backup reemplazará la base de datos actual!"
                    + "\n\n Se ejecutarán los siguientes pasos:"
                    + "\n 1.- La conexión con la base de datos se cerrará."
                    + "\n 2.- La base de datos actual será eliminada."
                    + "\n 3.- Se creará una nueva base de datos."
                    + "\n 4.- Se restaurará el backup en la base de datos creada."
                    + "\n\n ¿Desea continuar?","¡Atención!", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION) {
                try {
                    Configuracion configuracion = new Configuracion();
                    SistemaDAO sistemaDAO = new SistemaDAOImpl(this.connectionDB);
                    configuracion = sistemaDAO.getGestionConfiguraciones();
                    Utiles utiles = new Utiles();
                    String rutaProgramasPG = configuracion.getRutaProgramasPG();
                    String dbHost = almacenes.conectorDB.DatosConexion.DB_HOST;
                    String dbPort = almacenes.conectorDB.DatosConexion.DB_PORT;
                    String dbName = almacenes.conectorDB.DatosConexion.DB_NAME;
                    String dbUser = almacenes.conectorDB.DatosConexion.DEFAULT_USERNAME;
                    String dbPassword = almacenes.conectorDB.DatosConexion.DEFAULT_PASSWORD;
                    String dumpFile = archivoBackUP.getText();
                    
                    DatabaseUtils databaseUtils = new DatabaseUtils();
                    databaseUtils.close(connectionDB);
                    
                    String mensajes = "";
                    mensajes = utiles.execPgRestore(rutaProgramasPG, dbHost, dbPort, dbName, dbUser, dbPassword, dumpFile);
                    if (mensajes.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "El archivo de backup se restauró, el programa se cerrará, vuelva a iniciar.", "¡Atención!",
                            JOptionPane.INFORMATION_MESSAGE);                        
                    } else {
                        JOptionPane.showMessageDialog(null, mensajes 
                                + "\n La conexión con la base de datos cerró. \nEl programa debe cerrar. \n¡Ingrese nuevamente!" , "¡Atención!",
                            JOptionPane.ERROR_MESSAGE);
                    }
                    System.exit(0);
                } catch (SQLException | InterruptedException ex) {
                    Logger.getLogger(FormRestaurarDB.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, ex, "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
                }
            }            
        } else {
            JOptionPane.showMessageDialog(null, errores, "¡Error!",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_restaurarDBActionPerformed

    private void botonRutaOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRutaOrigenActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Destino del backup");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Backup", "backup", "tar");
        chooser.setFileFilter(filter);
        
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
            archivoBackUP.setText(chooser.getSelectedFile().getAbsolutePath());
        } else {
            System.out.println("No Selection ");
        }
    }//GEN-LAST:event_botonRutaOrigenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRestaurarDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRestaurarDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRestaurarDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRestaurarDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRestaurarDB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField archivoBackUP;
    private javax.swing.JButton botonRutaOrigen;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton restaurarDB;
    private javax.swing.JLabel rotatingWheel;
    // End of variables declaration//GEN-END:variables
}
